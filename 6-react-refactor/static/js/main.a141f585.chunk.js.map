{"version":3,"sources":["components/Grid/index.js","app/ContentModule/context/contentAPI.js","app/ContentModule/context/test.js","app/ContentModule/context/index.js","app/ContentModule/index.js","features/PageList/index.js","routes/Default/index.js","routes/index.js","app/index.js","serviceWorker.js","components/Banner/index.js","templates/Primary/Header.js","templates/Primary/Footer.js","components/Button/index.js","components/PrimaryNav/index.js","components/Logo/index.js","templates/Primary/index.js","index.js"],"names":["Grid","className","children","props","classnames","Row","gap","Col","size","tablet","desktop","offset","defaultProps","timeout","t","Promise","resolve","setTimeout","getAllByContentType","a","type","fetch","process","response","json","data","getContentTypeByName","slug","getTaxonomyByContentType","testData","title","testTax","key","items","Error","name","context","contentAPI","initialState","list","pending","error","page","taxonomy","getPage","createAsyncThunk","getTaxonomy","getList","state","fulfilled","action","payload","rejected","contentSlice","createSlice","reducers","reset","extraReducers","actions","PageList","dispatch","useDispatch","useSelector","content","useEffect","message","length","map","item","i","Default","style","paddingTop","minHeight","location","path","component","exact","configureStore","reducer","Boolean","window","hostname","match","Banner","aria-label","src","flag","alt","aria-hidden","aria-expanded","aria-controls","id","dotGov","https","xmlns","width","height","viewBox","aria-labelledby","fill","FillRule","d","Header","logo","nav","Footer","href","nodes","url","target","rel","b","link","to","Button","color","variant","raised","onClick","external","fullwidth","Node","includes","NavItem","text","hidden","idx","activeClassName","Nav","role","close","Logo","Primary","PrimaryNav","library","add","far","fas","ReactDOM","render","StrictMode","basename","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a141f585.chunk.js","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst computeSizes = (amount = 12) =>\n  Array.from(Array(amount).keys()).reduce((acc, cur) => {\n    const value = ++cur;\n    const string = value.toString();\n    return [...acc, value, string];\n  }, []);\n\nexport const Grid = ({ className, children, ...props }) => {\n  return (\n    <div\n      className={classnames({\n        \"grid-container\": true,\n        [className]: className,\n      })}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nGrid.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport const Row = ({ className, gap, children, ...props }) => {\n  return (\n    <div\n      className={classnames({\n        \"grid-row\": true,\n        [`grid-gap-${gap}`]: gap,\n        [className]: className,\n      })}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst rowSizes = computeSizes(6);\n\nRow.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  gap: PropTypes.oneOf(rowSizes),\n};\n\nexport const Col = ({\n  className,\n  size,\n  tablet,\n  desktop,\n  offset,\n  children,\n  ...props\n}) => {\n  return (\n    <div\n      className={classnames({\n        [`grid-col-${size}`]: size,\n        [`tablet:grid-col-${tablet}`]: tablet,\n        [`desktop:grid-col-${desktop}`]: desktop,\n        [className]: className,\n        [`grid-offset-${offset}`]: offset,\n      })}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nCol.defaultProps = {\n  size: \"12\",\n};\n\nconst colSizes = computeSizes();\n\nCol.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  size: PropTypes.oneOf(colSizes),\n  tablet: PropTypes.oneOf(colSizes),\n  desktop: PropTypes.oneOf(colSizes),\n};\n","/* istanbul ignore file */\nconst timeout = (t = 1000) => {\n  return new Promise((resolve) => setTimeout(resolve, t));\n};\n\nexport const getAllByContentType = async (props) => {\n  await timeout();\n  const { type } = props;\n  const response = await fetch(\n    `${process.env.PUBLIC_URL}/content/${type}/index.json`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getContentTypeByName = async (props) => {\n  await timeout();\n  const { type, slug } = props;\n  const response = await fetch(\n    `${process.env.PUBLIC_URL}/content/${type}/${slug}.json`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getTaxonomyByContentType = async (props) => {\n  await timeout();\n  const { type } = props;\n  const response = await fetch(\n    `${process.env.PUBLIC_URL}/content/${type}/taxonomy.json`\n  );\n  const data = await response.json();\n  return data;\n};\n","/* istanbul ignore file */\n\nconst testData = [{ title: \"test 1\" }, { title: \"test 2\" }];\n\nconst testTax = [\n  { key: \"testTax\", title: \"test tax\", items: [\"testtax1\", \"testtax2\"] },\n];\n\nexport const getAllByContentType = async (props) => {\n  if (props.type === \"error\") {\n    throw new Error(\"Invalid Type.\");\n  }\n  return testData;\n};\n\nexport const getContentTypeByName = async (props) => {\n  if (props.type === \"error\") {\n    throw new Error(\"Invalid Type.\");\n  }\n  if (!props.name) {\n    throw new Error(\"Invalid Name.\");\n  }\n  return testData[0];\n};\n\nexport const getTaxonomyByContentType = async (props) => {\n  if (props.type === \"error\") {\n    throw new Error(\"Invalid Type.\");\n  }\n  return testTax;\n};\n","/* istanbul ignore file */\nimport * as contentAPI from \"./contentAPI\";\nimport * as test from \"./test\";\n\nlet context = test;\n\nif (process.env.NODE_ENV !== \"test\") {\n  context = contentAPI;\n}\n\nexport default context;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport context from \"./context\";\n\nexport const initialState = {\n  list: { pending: false, data: [], error: null },\n  page: { pending: false, data: {}, error: null },\n  taxonomy: { pending: false, data: [], error: null },\n};\n\nexport const getPage = createAsyncThunk(\n  \"content/getPage\",\n  async ({ type = \"page\", name = \"\" }) =>\n    await context.getContentTypeByName({ type, name })\n);\nexport const getTaxonomy = createAsyncThunk(\n  \"content/getTaxonomy\",\n  async ({ type }) => await context.getTaxonomyByContentType({ type })\n);\n\nexport const getList = createAsyncThunk(\n  \"content/getList\",\n  async ({ type }) => await context.getAllByContentType({ type })\n);\n\nconst pending = (key, state) => {\n  return {\n    ...state,\n    [key]: { ...initialState[key], pending: true },\n  };\n};\nconst fulfilled = (key, state, action) => {\n  return {\n    ...state,\n    [key]: { ...initialState[key], data: action.payload },\n  };\n};\nconst rejected = (key, state, action) => {\n  return {\n    ...state,\n    [key]: { ...initialState[key], error: action.error },\n  };\n};\n\nexport const contentSlice = createSlice({\n  name: \"content\",\n  initialState,\n  reducers: {\n    reset: () => initialState,\n  },\n  extraReducers: {\n    [getPage.pending]: (state) => pending(\"page\", state),\n    [getPage.fulfilled]: (state, action) => fulfilled(\"page\", state, action),\n    [getPage.rejected]: (state, action) => rejected(\"page\", state, action),\n    [getList.pending]: (state) => pending(\"list\", state),\n    [getList.fulfilled]: (state, action) => fulfilled(\"list\", state, action),\n    [getList.rejected]: (state, action) => rejected(\"list\", state, action),\n    [getTaxonomy.pending]: (state) => pending(\"taxonomy\", state),\n    [getTaxonomy.fulfilled]: (state, action) =>\n      fulfilled(\"taxonomy\", state, action),\n    [getTaxonomy.rejected]: (state, action) =>\n      rejected(\"taxonomy\", state, action),\n  },\n});\n\nexport const { reset } = contentSlice.actions;\n\nexport default contentSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getList } from \"app/ContentModule\";\n\nconst PageList = ({ type = \"page\" }) => {\n  const dispatch = useDispatch();\n  const list = useSelector((state) => state.content.list);\n  useEffect(() => {\n    dispatch(getList({ type }));\n  }, [dispatch, type]);\n  const { pending, data, error } = list;\n  if (pending) {\n    return <h1>Pending...</h1>;\n  }\n  if (error) {\n    return <h1 className=\"PageList__error\">{error.message}</h1>;\n  }\n  if (!data.length) {\n    return <h1>No content found.</h1>;\n  }\n  return data.map((item, i) => (\n    <h1 className=\"PageList__item\" key={`PageList-${i}`}>\n      {item.title}\n    </h1>\n  ));\n};\n\nPageList.propTypes = {\n  type: PropTypes.string,\n};\n\nexport default PageList;\n","import React from \"react\";\nimport { Grid, Row, Col } from \"components/Grid\";\nimport PageList from \"features/PageList\";\n\nconst Default = () => {\n  return (\n    <Grid>\n      <Row>\n        <Col size={12}>\n          <div style={{ paddingTop: \"5vh\", minHeight: \"50vh\" }}>\n            <PageList />\n          </div>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default Default;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Default from \"./Default\";\n\nexport default ({ location }) => (\n  <Switch location={location}>\n    <Route key=\"default\" path=\"/\" component={Default} exact />\n  </Switch>\n);\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport content from \"./ContentModule\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    content,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport flag from \"uswds/dist/img/us_flag_small.png\";\nimport dotGov from \"uswds/dist/img/icon-dot-gov.svg\";\nimport https from \"uswds/dist/img/icon-https.svg\";\n\nconst Banner = () => {\n  return (\n    <section className=\"usa-banner\" aria-label=\"Official government website\">\n      <div className=\"usa-accordion\">\n        <header className=\"usa-banner__header\">\n          <div className=\"usa-banner__inner\">\n            <div className=\"grid-col-auto\">\n              <img\n                className=\"usa-banner__header-flag\"\n                src={flag}\n                alt=\"U.S. flag\"\n              />\n            </div>\n            <div className=\"grid-col-fill tablet:grid-col-auto\">\n              <p className=\"usa-banner__header-text\">\n                An official website of the United States government\n              </p>\n              <p className=\"usa-banner__header-action\" aria-hidden=\"true\">\n                Here’s how you know\n              </p>\n            </div>\n            <button\n              className=\"usa-accordion__button usa-banner__button\"\n              aria-expanded=\"false\"\n              aria-controls=\"gov-banner\"\n            >\n              <span className=\"usa-banner__button-text\">\n                Here’s how you know\n              </span>\n            </button>\n          </div>\n        </header>\n        <div\n          className=\"usa-banner__content usa-accordion__content\"\n          id=\"gov-banner\"\n        >\n          <div className=\"grid-row grid-gap-lg\">\n            <div className=\"usa-banner__guidance tablet:grid-col-6\">\n              <img\n                className=\"usa-banner__icon usa-media-block__img\"\n                src={dotGov}\n                alt=\"Dot gov\"\n              />\n              <div className=\"usa-media-block__body\">\n                <p>\n                  <strong>Official websites use .gov</strong>\n                  <br />A <strong>.gov</strong> website belongs to an official\n                  government organization in the United States.\n                </p>\n              </div>\n            </div>\n            <div className=\"usa-banner__guidance tablet:grid-col-6\">\n              <img\n                className=\"usa-banner__icon usa-media-block__img\"\n                src={https}\n                alt=\"Https\"\n              />\n              <div className=\"usa-media-block__body\">\n                <p>\n                  <strong>Secure .gov websites use HTTPS</strong>\n                  <br />A <strong>lock</strong> (\n                  <span className=\"icon-lock\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"52\"\n                      height=\"64\"\n                      viewBox=\"0 0 52 64\"\n                      className=\"usa-banner__lock-image\"\n                      aria-labelledby=\"banner-lock-title banner-lock-description\"\n                    >\n                      <title id=\"banner-lock-title\">Lock</title>\n                      <desc id=\"banner-lock-description\">A locked padlock</desc>\n                      <path\n                        fill=\"#000000\"\n                        FillRule=\"evenodd\"\n                        d=\"M26 0c10.493 0 19 8.507 19 19v9h3a4 4 0 0 1 4 4v28a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V32a4 4 0 0 1 4-4h3v-9C7 8.507 15.507 0 26 0zm0 8c-5.979 0-10.843 4.77-10.996 10.712L15 19v9h22v-9c0-6.075-4.925-11-11-11z\"\n                      />\n                    </svg>\n                  </span>\n                  ) or <strong>https://</strong> means you’ve safely connected\n                  to the .gov website. Share sensitive information only on\n                  official, secure websites.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nBanner.propTypes = {};\n\nexport default Banner;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Row, Col } from \"components/Grid\";\nimport Banner from \"components/Banner\";\n\nconst Header = ({ logo, nav }) => {\n  return (\n    <header className=\"usa-header usa-header--basic\">\n      <Grid>\n        <Row>\n          <Col>\n            <Banner />\n            <Row className=\"align-content-center margin-top-2\">\n              <Col desktop={3}>{logo}</Col>\n              <Col desktop={9}>{nav}</Col>\n            </Row>\n          </Col>\n        </Row>\n      </Grid>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  logo: PropTypes.node,\n  nav: PropTypes.node,\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Grid, Row, Col } from \"components/Grid\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"usa-footer\">\n      <Grid>\n        <Row>\n          <Col>\n            <p>\n              10x <a href=\"/privacy-policy/\">privacy policy</a>\n            </p>\n            <p>\n              10x complies with the{\" \"}\n              <a href=\"https://www.gsa.gov/about-us/organization/office-of-civil-rights/notification-and-federal-employee-antidiscrimination-and-retaliation-act-of-2002\">\n                No Fear Act Notification and Federal Employee\n                Anti-Discrimination and Retaliation Act of 2002\n              </a>\n            </p>\n            <p>\n              Learn more about 10x by sending an email to{\" \"}\n              <a href=\"mailto:10x@gsa.gov\">10x@gsa.gov</a>\n            </p>\n            <p>\n              Built with the{\" \"}\n              <a href=\"https://designsystem.digital.gov/\">\n                U.S. Web Design System 2.0 alpha\n              </a>\n            </p>\n            <a href=\"https://designsystem.digital.gov/\" className=\"uswds-stamp\">\n              USWDS\n            </a>\n\n            <div className=\"BlockGraphic\">\n              <div>\n                <div>\n                  <div></div>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Grid>\n    </footer>\n  );\n};\n\nFooter.propTypes = {};\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nconst nodes = {\n  a: ({ url, children, type, ...props }) => (\n    <a {...props} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </a>\n  ),\n  b: ({ url, type = \"button\", ...props }) => <button type={type} {...props} />,\n  link: ({ type, url, ...props }) => <Link to={url} {...props} />,\n};\n\nexport const Button = ({\n  children,\n  className,\n  color,\n  variant,\n  raised,\n  url,\n  onClick,\n  external,\n  fullwidth,\n  type,\n  ...props\n}) => {\n  const Node =\n    onClick || type\n      ? nodes[\"b\"]\n      : external || url.includes(\"://\")\n      ? nodes[\"a\"]\n      : nodes[\"link\"];\n  return (\n    <Node\n      url={url}\n      type={type}\n      onClick={onClick}\n      {...props}\n      className={classnames({\n        \"usa-button\": true,\n        [`usa-button--${color}`]: color,\n        [`usa-button--${color}-${variant}`]: variant,\n        \"usa-button--fullwidth\": fullwidth,\n        \"usa-button--raised\": raised,\n        [className]: className,\n      })}\n    >\n      {children}\n    </Node>\n  );\n};\n\nButton.defaultProps = {\n  color: \"primary\",\n};\n\nButton.propTypes = {\n  /** component children to be rendered */\n  children: PropTypes.node,\n  /** classnames applied to component */\n  className: PropTypes.string,\n  /** defines the component base color */\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"accent-warm\",\n    \"accent-cool\",\n  ]),\n  /** sets variant button type */\n  variant: PropTypes.oneOf([\"link\", \"media\", \"outline\", \"white\"]),\n  /** describes the location for the <Link> or <a> render */\n  url: PropTypes.string,\n  /** sets button type for the <button> render */\n  type: PropTypes.string,\n  /** onClick event for the <button> render */\n  onClick: PropTypes.func,\n  /** boolean for setting the external link icon */\n  external: PropTypes.bool,\n  /** boolean to render a fullwidth button */\n  fullwidth: PropTypes.bool,\n  /** boolean to render a raised (with shadow) button  */\n  raised: PropTypes.bool,\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport close from \"uswds/dist/img/close.svg\";\nimport Button from \"components/Button\";\nimport \"uswds\";\n\nconst NavItem = ({ id, text, url, items = [] }) => {\n  return (\n    <li className=\"usa-nav__primary-item\">\n      {items.length ? (\n        <div>\n          <button\n            className={`usa-accordion__button usa-nav__url`}\n            aria-controls={`extended-nav-section-${id}`}\n            aria-expanded={false}\n          >\n            <span>{text}</span>\n          </button>\n          <ul\n            id={`extended-nav-section-${id}`}\n            className=\"usa-accordion__content usa-nav__submenu\"\n            hidden\n          >\n            {items.map((item, idx) => (\n              <li key={idx} className=\"usa-nav__submenu-item\">\n                <Link to={item.url}>{item.text}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <NavLink\n          className=\"usa-nav__url\"\n          activeClassName=\"usa-current\"\n          to={url}\n        >\n          <span>{text}</span>\n        </NavLink>\n      )}\n    </li>\n  );\n};\n\nconst Nav = ({ items }) => {\n  return (\n    <nav role=\"navigation\" aria-label=\"Primary navigation\" className=\"usa-nav\">\n      <div className=\"usa-nav__inner\">\n        <Button type=\"button\" className=\"usa-nav__close\">\n          <img src={close} alt=\"close\" />\n        </Button>\n        <ul className=\"usa-accordion usa-nav__primary\">\n          {items.map(({ text, url, items }, idx) => {\n            return (\n              <NavItem\n                key={`usa-nav-item-${idx}`}\n                id={idx}\n                text={text}\n                url={url}\n                items={items}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nNav.defaultProps = {\n  items: [],\n};\n\nNav.propTypes = {\n  items: PropTypes.array,\n};\n\nexport default Nav;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Logo = ({ title }) => {\n  return (\n    <div className=\"usa-logo\" id=\"basic-logo\">\n      <em className=\"usa-logo__text\">10x</em>\n    </div>\n  );\n};\nLogo.propTypes = {\n  title: PropTypes.node,\n};\n\nexport default Logo;\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport PrimaryNav from \"components/PrimaryNav\";\r\nimport \"styles/index.scss\";\r\nimport Logo from \"components/Logo\";\r\n\r\nconst Primary = ({ children }) => {\r\n  const navItems = [\r\n    { url: \"/\", text: \"About 10x\" },\r\n    { url: \"/\", text: \"Send us an idea\" },\r\n    { url: \"/\", text: \"The 10x process\" },\r\n    { url: \"/\", text: \"The projects\" },\r\n  ];\r\n  return (\r\n    <div className=\"App\">\r\n      <Header logo={<Logo />} nav={<PrimaryNav items={navItems} />} />\r\n      {children}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Primary;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./app\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Primary from \"templates/Primary\";\r\n\r\nlibrary.add(far, fas);\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  const axe = require(\"react-axe\");\r\n  axe(React, ReactDOM, 1000);\r\n}\r\n\r\nconst basename = process.env.PUBLIC_URL || \"/\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename={basename}>\r\n      <Provider store={store}>\r\n        <Primary>\r\n          <Routes />\r\n        </Primary>\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}